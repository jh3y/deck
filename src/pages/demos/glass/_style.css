@import url('https://unpkg.com/normalize.css') layer(normalize);
@import url('https://fonts.googleapis.com/css2?family=Gloria+Hallelujah&display=swap');

@layer normalize, foundation, demo;

@layer demo {
  :root {
    --content-width: 720px;
    scrollbar-color: canvasText #0000;
  }

  section p {
    line-height: 1.5;
  }
  
  .emojis {
    --font-level: 4;
    display: flex;
    gap: 1rem;
    flex-wrap: wrap;
  }

  .arrow {
    display: inline-block;
    opacity: 0.8;
    position: absolute;
    font-size: 0.875rem;
    font-family: 'Gloria Hallelujah', cursive;
    transition: opacity 0.26s ease-out;

    &.arrow--debug {
      top: 140px;
      left: 30%;
      translate: -100% 0;
      width: 80px;
      span {
        display: inline-block;
        rotate: -24deg;
        translate: 0 100%;
      }
      svg {
        rotate: 20deg;
        /* bottom: 130%; */
        translate: 80% -80%;
        rotate: -25deg;
        left: 0%;
        width: 100%;
      }
    }
  }
  .filter {
    width: 100%;
    height: 100%;
    pointer-events: none;
    position: absolute;
    inset: 0;
  }

  :is(header, main) {
    width: var(--content-width);
    max-width: calc(100vw - 2rem);
    margin: 0 auto;
  }

  section {
    margin-block: 4rem;
  }

  .images {
    display: flex;
    flex-direction: column;
    gap: 2rem;

    img {
      width: 300px;
    }
  }

  footer {
    padding: 1rem;
    text-align: center;
    font-size: 0.875rem;
    opacity: 0.7;
  }

  header {
    margin-block: 4rem;
  }

  header p {
    --font-level: 2;
    text-wrap: balance;
    color: color-mix(in oklch, canvasText, canvas 35%);
  }

  main {
    flex: 1;

    img {
      border-radius: 12px;
    }
  }

  .apps {
    display: grid;
    grid-template-columns: repeat(4, 80px);
    gap: 1rem;
  }

  .app {
    width: 80px;
    font-size: 0.875rem;
    font-weight: 300;
    span {
      display: block;
      text-align: center;
      white-space: nowrap;
    }
    img {
      width: 100%;
    }
  }

  .nav-wrap {
    width: 100%;
    height: 100%;
    overflow: hidden;
    border-radius: inherit;
  }

  [data-icons='true'] .effect nav {
    opacity: 1;
  }

  [data-mode='dock'] .effect {
    backdrop-filter: url(#filter) brightness(1.1) saturate(1.5);
  }

  .effect nav {
    width: 100%;
    height: 100%;
    flex-wrap: wrap;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 0.4rem;
    opacity: 0;
    overflow: hidden;
    border-radius: inherit;
    transition: opacity 0.26s ease-out;
    /* display: none; */

    img {
      width: 80px;
      aspect-ratio: 1;
    }
  }

  .effect {
    opacity: 0;
    transition: opacity 0.26s ease-out;
    height: calc(var(--height) * 1px);
    width: calc(var(--width) * 1px);
    border-radius: calc(var(--radius) * 1px);
    position: fixed;
    z-index: 999999;
    background: light-dark(
      hsl(0 0% 100% / var(--frost, 0)),
      hsl(0 0% 0% / var(--frost, 0))
    );
    backdrop-filter: url(#filter) saturate(var(--saturation, 1));
    box-shadow: 0 0 2px 1px
        light-dark(
          color-mix(in oklch, canvasText, #0000 85%),
          color-mix(in oklch, canvasText, #0000 65%)
        )
        inset,
      0 0 10px 4px
        light-dark(
          color-mix(in oklch, canvasText, #0000 90%),
          color-mix(in oklch, canvasText, #0000 85%)
        )
        inset,
      0px 4px 16px rgba(17, 17, 26, 0.05), 0px 8px 24px rgba(17, 17, 26, 0.05),
      0px 16px 56px rgba(17, 17, 26, 0.05),
      0px 4px 16px rgba(17, 17, 26, 0.05) inset,
      0px 8px 24px rgba(17, 17, 26, 0.05) inset,
      0px 16px 56px rgba(17, 17, 26, 0.05) inset;

    * {
      pointer-events: none;
    }
  }

  .placeholder {
    width: 336px;
    height: 96px;
    max-width: 100%;
    position: relative;
    margin-bottom: 200px;
  }

  .dock-placeholder {
    width: 336px;
    height: 96px;
    border-radius: 16px;
    position: absolute;
    top: 50%;
    left: 50%;
    translate: -50% -50%;
  }

  [data-debug='true'] .displacement-debug {
    translate: 0 calc(100% + 1rem);
    scale: 1;
    opacity: 1;
  }

  .displacement-debug {
    pointer-events: none;
    height: 100%;
    width: 100%;
    position: absolute;
    inset: 0;
    translate: 0 calc(200% + 1rem);
    scale: 0.8;
    opacity: 0;
    transition-property: translate, opacity, scale;
    transition-duration: 0.26s;
    transition-timing-function: ease-out;
    z-index: -1;

    .label {
      position: absolute;
      left: 50%;
      top: calc(100% + 0.2lh);
      span {
        display: inline-block;
        font-size: 0.875rem;
        font-family: 'Gloria Hallelujah', cursive;
        padding: 0.5rem 0.75rem;
        background: color-mix(in oklch, canvas, #0000 25%);
        backdrop-filter: blur(4px);
        border-radius: 6px;
        white-space: nowrap;
      }
      svg {
        position: absolute;
        filter: drop-shadow(0 2px 10px canvas);
        right: 100%;
        rotate: 40deg;
        translate: 25% 60%;
        scale: -1 1;
        width: 40px;
      }
    }

    .displacement-image {
      height: 100%;
      width: 100%;
      pointer-events: none;
      border-radius: calc(var(--radius) * 1px);
    }
  }

  h1 {
    --font-level: 6;
    line-height: 0.9;
    margin: 0;
    margin-bottom: 0.25lh;
  }
}

@layer foundation {
  :root {
    --font-size-min: 16;
    --font-size-max: 20;
    --font-ratio-min: 1.2;
    --font-ratio-max: 1.33;
    --font-width-min: 375;
    --font-width-max: 1500;
  }

  body {
    color-scheme: light dark;
  }

  [data-theme='light'] body {
    color-scheme: light only;
  }

  [data-theme='dark'] body {
    color-scheme: dark only;
  }

  :where(.fluid) {
    --fluid-min: calc(
      var(--font-size-min) * pow(var(--font-ratio-min), var(--font-level, 0))
    );
    --fluid-max: calc(
      var(--font-size-max) * pow(var(--font-ratio-max), var(--font-level, 0))
    );
    --fluid-preferred: calc(
      (var(--fluid-max) - var(--fluid-min)) /
        (var(--font-width-max) - var(--font-width-min))
    );
    --fluid-type: clamp(
      (var(--fluid-min) / 16) * 1rem,
      ((var(--fluid-min) / 16) * 1rem) -
        (((var(--fluid-preferred) * var(--font-width-min)) / 16) * 1rem) +
        (var(--fluid-preferred) * var(--variable-unit, 100vi)),
      (var(--fluid-max) / 16) * 1rem
    );
    font-size: var(--fluid-type);
  }

  *,
  *:after,
  *:before {
    box-sizing: border-box;
  }

  body {
    overflow-x: hidden;
    color: light-dark(canvasText, #fff);
    min-height: 100vh;
    font-family: 'SF Pro Text', 'SF Pro Icons', 'AOS Icons', 'Helvetica Neue',
      Helvetica, Arial, sans-serif, system-ui;
  }

  .bear-link {
    color: canvasText;
    position: fixed;
    top: 1rem;
    left: 1rem;
    width: 48px;
    aspect-ratio: 1;
    display: grid;
    place-items: center;
    opacity: 0.8;
  }

  :where(.x-link, .bear-link):is(:hover, :focus-visible) {
    opacity: 1;
  }

  .bear-link svg {
    width: 75%;
  }

  /* Utilities */
  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border-width: 0;
  }
}

[data-top='true'] div.tp-dfwv {
  top: 8px;
}

div.tp-dfwv {
  position: fixed;
  width: 280px;
  bottom: 8px;
  top: unset;
  view-transition-name: pane;
}
