@import "normalize.css";

@font-face {
  font-family: "Geist Mono";
  src: url("https://assets.codepen.io/605876/GeistMonoVariableVF.ttf")
    format("truetype");
}

:root {
  --grid-offset: calc(50% + 80px);
  --color: hsl(0 0% 6%);
  --bg: hsl(0 0% 96%);
  --color-alpha: hsl(0 0% 60%);
  --selection: hsl(0 0% 80%);
  --bg-size: 180px;
  --grid-line: hsl(0 0% 80%);
  --input-bg: hsl(0 0% 100% / 0.2);
  --grid-accent: hsl(280 0% 10% / 0.1);
  --glint: white;
  --control: hsl(0 0% 80%);
  --button-shade: 80%;
  --size: 68px;
  --font: 1.75rem;
}

@media (max-width: 600px) {
  :root {
    --size: 48px;
    --font: 1.25rem;
  }
}
:root:focus-within {
  --grid-accent: hsl(280 0% 10% / 0.35);
}

/* @media (prefers-color-scheme: dark) {
  :root {
    --button-shade: 30%;
    --glint: black;
    --grid-accent: hsl(280 0% 80% / 0.1);
    --selection: hsl(0 0% 20%);
    --color: hsl(0 0% 98%);
    --bg: hsl(0 0% 6%);
    --color-alpha: hsl(0 0% 50%);
    --grid-line: hsl(0 0% 12%);
    --input-bg: hsl(0 0% 0% / 0.2);
    --control: hsl(0 0% 20%);
  }
  :root:focus-within {
    --grid-accent: hsl(280 0% 80% / 0.35);
  }
} */

*,
*:after,
*:before {
  box-sizing: border-box;
}

body {
  display: grid;
  place-items: center;
  min-height: 100vh;
  font-family: "Geist Mono", sans-serif, system-ui;
  color: var(--color);
  padding: 0.5rem;
  /*	background: black;*/
}

.form-group:focus-within label {
  color: var(--color);
}
.form-group:focus-within {
  border-color: var(--color);
  color: var(--color);
}
.form-group:focus-within button {
  color: var(--color);
}

.dummy {
  font-size: var(--font);
  display: flex;
  height: var(--size);
  padding-inline: 2rem;
  color: var(--color);
  overflow: hidden;
  font-variant: tabular-nums;
}

@media (max-width: 600px) {
  .dummy {
    padding-inline: 1rem;
  }
}

.dummy__char {
  position: relative;
  width: 1ch;
  flex: 1;
}

.dummy__char span {
  position: absolute;
  inset: 0;
  display: inline-block;
  height: 100%;
  line-height: var(--size);
}

[data-visible="true"] {
  --visible: 1;
}

[data-style="blanket"] .dummy__char:not(.dummy__char--static) span {
  --delay: 0;
}
[data-style="linear"] .dummy__char:not(.dummy__char--static) span {
  --delay: calc(var(--index) * 0.075s);
}
[data-style="sin"] .dummy__char:not(.dummy__char--static) span {
  --delay: calc((sin((var(--index) / 12) * var(--spread)) * var(--speed)) * 1s);
}

.dummy__char:not(.dummy__char--static) span {
  --offset: 5%;
  --transition: 0.115;
  --speed: calc(var(--transition) * 6);
  --spread: 45deg;
  /* 	--delay: calc(sin((var(--index) / 12) * 45deg) * var(--speed) * 1s); */

  /*   --delay: calc(var(--index) * 0.05s); */

  transition-property: translate, opacity, scale;
  transition-duration: calc(var(--transition) * 1s);
  transition-delay: var(--delay);
  transition-timing-function: cubic-bezier(0.51, 0.77, 0.88, 1.23);
}
.dummy__char:not(.dummy__char--static) span:last-of-type {
  transform-origin: 50% 0;
  translate: 0 calc((var(--offset) * -1) + (var(--visible, 0) * var(--offset)));
  scale: calc(0.625 + (var(--visible, 0) * 0.375));
  opacity: var(--visible, 0);
}
.dummy__char:not(.dummy__char--static) span:first-of-type {
  translate: 0 calc(var(--visible, 0) * var(--offset));
  transform-origin: 50% 100%;
  scale: calc(1 - (var(--visible, 0) * 0.375));
  opacity: calc(1 - var(--visible, 0));
}

label {
  position: absolute;
  color: var(--color-alpha);
  bottom: calc(100% + 0.5rem);
  letter-spacing: 0.2ch;
  transition: color 0.2s;
  font-size: 0.875rem;
}

.form-group {
  color: var(--color-alpha);
  background: var(--input-bg);
  position: relative;
  display: flex;
  border-color: var(--color-alpha);
  border-style: solid;
  transition:
    border-color 0.2s,
    color 0.2s;
}

.eye circle:nth-of-type(2) {
  fill: var(--glint);
}

button {
  padding: 0;
  display: grid;
  place-items: center;
  height: 100%;
  aspect-ratio: 1;
  border-radius: 12px;
  border: 0;
  background: transparent;
  border: 6px solid transparent;
  transition: background 0.125s;
  color: var(--color-alpha);
  cursor: pointer;
  outline: 0;
  height: var(--size);
}

button:hover {
  background: linear-gradient(var(--control), var(--control)) padding-box;
}

.form-group__actions {
  /*	position: absolute;*/
  right: 0;
  z-index: 2;
  top: 50%;
  display: flex;
  height: 100%;
  color: var(--color);
}

input::selection {
  background: var(--selection);
}

button:is(:focus-visible, :hover) {
  --active: 1;
}

button svg {
  width: 75%;
}

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

.clipboard {
  overflow: visible !important;
}

.clipboard > path {
  transform-box: fill-box;
  transform-origin: 50% 50%;
}

.clipboard__check {
  stroke-dasharray: 1;
  stroke-dashoffset: 1;
  transition: stroke-dashoffset 0.2s;
}

[data-copied="true"] .clipboard__check {
  transition: stroke-dashoffset 0.2s 0.2s;
}

.clipboard__board {
  rotate: 5deg;
  translate: calc(20% + (var(--active, 0) * -5%)) -8%;
  fill: var(--bg);
}

.clipboard__paper {
  fill: var(--bg);
  translate: calc(-50% + (var(--active, 0) * 25%))
    calc(25% - (var(--active, 0) * 10%));
  rotate: -5deg;
}

:is(.clipboard__paper, .clipboard__board) {
  transition:
    translate 0.2s,
    rotate 0.2s;
}

button:is(:hover, :focus-visible) :is(.clipboard__paper, .clipboard__board) {
  fill: var(--control);
}

[data-copied="true"] :is(.clipboard__paper, .clipboard__board) {
  translate: 0 0;
  rotate: 0deg;
}

[data-copied="true"] .clipboard__check {
  stroke-dashoffset: 0;
}
