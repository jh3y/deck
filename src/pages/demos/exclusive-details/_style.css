@import 'normalize.css' layer(normalize);

@layer normalize, foundation, demo;

@layer demo {
  
  :root {
    --ease: linear(
    0 0%, 0.0039 6.25%, 0.0156 12.5%,
    0.0352 18.75%, 0.0625 25%,
    0.0977 31.25%, 0.1407 37.5%,
    0.1914 43.74%, 0.2499 49.99%,
    0.3164 56.25%, 0.3906 62.5%, 0.5625 75%,
    0.7656 87.5%, 1 100%
  );
  }
  
  summary {
    width: 100%;
    padding-block: 1rem;
    border-bottom: 1px solid canvasText;
  }

  summary:focus-visible {
    outline-offset: 4px;
    outline-color: red;
  }

  details span {
    display: inline-block;
    width: 100%;
    overflow: hidden;
    font-weight: 300;
    transition-duration: 1s;
    padding-block: 1rem;
  }

  details {
    width: 280px;
  }
  
  details {
    interpolate-size: allow-keywords;
  }

  details::details-content {
    overflow: hidden;
    opacity: 0;
    height: 0;
    filter: blur(4px);
    translate: 0 1lh;
    transition: content-visibility, opacity, height, background, filter, translate;
    transition-behavior: allow-discrete;
    transition-duration: calc(var(--duration, 0.5) * 1s);
    transition-timing-function: var(--ease);
    mask: linear-gradient(#000 calc(100% - 1rem), #0000);
  }

  [open]::details-content {
    height: fit-content;
    filter: blur(0px);
    opacity: 1;
    translate: 0 0;
  }

  summary {
    display: flex;
    font-weight: 600;
    cursor: pointer;
    position: relative;
    padding-block: 1rem;
  }

  summary::after {
    content: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 24 24' stroke-width='1.5' stroke='currentColor' %3E%3Cpath stroke-linecap='round' stroke-linejoin='round' d='M19.5 8.25l-7.5 7.5-7.5-7.5' /%3E%3C/svg%3E%0A");
    position: absolute;
    top: 50%;
    right: 0;
    width: 20px;
    translate: 0 -35%;
    transition: scale calc(var(--duration, 0.5) * 1s) var(--ease);
    transform-origin: 50% 40%;
  }

  [data-theme='dark'] summary::after {
    filter: invert(1);
  }

  @media (prefers-color-scheme: dark) {
    summary::after {
      filter: invert(1);
    }
  }

  details[open] summary::after {
    scale: -1;
  }
}

@layer foundation {
  *,
  *:after,
  *:before {
    box-sizing: border-box;
  }

  body {
    display: grid;
    min-height: 100vh;
    font-family: 'SF Pro Text', 'SF Pro Icons', 'AOS Icons', 'Helvetica Neue',
      Helvetica, Arial, sans-serif, system-ui;
  }
  
  [data-centered=true] body {
    place-items: center;
  }
  
  [data-centered=false] body {
    align-content: start;
    justify-content: center;
    padding-top: 20vh;
  }

  .bear-link {
    color: canvasText;
    position: fixed;
    top: 1rem;
    left: 1rem;
    width: 48px;
    aspect-ratio: 1;
    display: grid;
    place-items: center;
    opacity: 0.8;
  }

  :where(.x-link, .bear-link):is(:hover, :focus-visible) {
    opacity: 1;
  }

  .bear-link svg {
    width: 75%;
  }

  /* Utilities */
  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border-width: 0;
  }

  html {
    color-scheme: light dark;
  }
  [data-theme='dark'] {
    color-scheme: dark only;
  }
  [data-theme='light'] {
    color-scheme: light only;
  }

  ::view-transition-old(root) {
    animation: none;
  }
  ::view-transition-new(root) {
    animation: open calc(var(--duration) * 1s);
    z-index: 2;
    /* clip-path: inset(0 0 0 0); */
    clip-path: polygon(
      -10% 0%,
      110% 0%,
      110% 50%,
      -10% 50%,
      -10% 50%,
      110% 50%,
      110% 100%,
      -10% 100%
    );
  }
  @keyframes open {
    0% {
      clip-path: polygon(
        -10% 0%,
        110% 0%,
        110% 0%,
        -10% 0%,
        -10% 100%,
        110% 100%,
        110% 100%,
        -10% 100%
      );
    }
  }
}

div.tp-dfwv {
  width: 270px;
}
