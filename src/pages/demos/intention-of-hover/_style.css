@import url('https://unpkg.com/normalize.css') layer(normalize);

@import url('https://fonts.googleapis.com/css2?family=Gloria+Hallelujah&family=Inter:ital,opsz,wght@0,14..32,100..900;1,14..32,100..900&display=swap');

@layer normalize, foundation, demo;

@layer demo {
  .arrow {
    display: inline-block;
    opacity: 0.6;
    position: fixed;
    font-size: 0.875rem;
    font-family: 'Gloria Hallelujah', cursive;
    transition: opacity 0.26s 0.26s ease-out;

    &.arrow--instruction {
      top: 50%;
      left: 50%;
      translate: -140% 150%;
      rotate: -10deg;
      svg {
        /* color: hsl(0 0% 65%); */
        scale: 1 1;
        top: 40%;
        rotate: 10deg;
        left: 90%;
        width: 90px;
        translate: 0% 20%;
        position: absolute;
      }
    }
  }

  .hover {
    border: 0;
    background: transparent;
    position: relative;
    color: var(--color);
    padding: 1rem 2rem;
    background: var(--bg);
    cursor: pointer;
    outline-color: canvasText;
    border-radius: 0;

    &::after {
      content: '';
      background: white;
      position: absolute;
      inset: 0;
      mix-blend-mode: difference;
      scale: 0 1;
      transform-origin: 100% 50%;
      transition: scale 0.2s ease-out;
      pointer-events: none;
    }
  }

  .actions {
    background: light-dark(#fff, #000);
    display: none;
  }

  .hover:is(:hover, :focus-visible)::after {
    scale: 1 1;
    transform-origin: 0 50%;
  }

  [data-intent='true'] .hover:is(:hover, :focus-visible)::after {
    transition: scale 0.2s 0.15s ease-out;
  }

  [data-vertical='true'] .hover::after {
    scale: 1 0;
    transform-origin: 50% 0;
  }
  [data-vertical='true'] .hover:is(:hover, :focus-visible)::after {
    scale: 1 1;
    transform-origin: 50% 100%;
  }

  [data-revert='true'] .hover::after,
  [data-revert='true'] .hover:is(:hover, :focus-visible)::after {
    transform-origin: 0 50%;
  }

  [data-vertical='true'][data-revert='true'] .hover::after,
  [data-vertical='true'][data-revert='true']
    .hover:is(:hover, :focus-visible)::after {
    transform-origin: 50% 100%;
  }

  ::view-transition-old(root) {
    animation: none;
  }
  ::view-transition-new(root) {
    animation-name: bloom;
    animation-duration: 1.25s;
  }
  @keyframes bloom {
    0% {
      clip-path: circle(0 at 0 0);
    }
    100% {
      clip-path: circle(150vmax at 0 0);
    }
  }
}

@layer foundation {
  :root {
    --font-size-min: 16;
    --font-size-max: 20;
    --font-ratio-min: 1.2;
    --font-ratio-max: 1.33;
    --font-width-min: 375;
    --font-width-max: 1500;
  }

  html {
    color-scheme: light dark;
  }

  [data-theme='light'] {
    color-scheme: light only;
  }

  [data-theme='dark'] {
    color-scheme: dark only;
  }

  :where(.fluid) {
    --fluid-min: calc(
      var(--font-size-min) * pow(var(--font-ratio-min), var(--font-level, 0))
    );
    --fluid-max: calc(
      var(--font-size-max) * pow(var(--font-ratio-max), var(--font-level, 0))
    );
    --fluid-preferred: calc(
      (var(--fluid-max) - var(--fluid-min)) /
        (var(--font-width-max) - var(--font-width-min))
    );
    --fluid-type: clamp(
      (var(--fluid-min) / 16) * 1rem,
      ((var(--fluid-min) / 16) * 1rem) -
        (((var(--fluid-preferred) * var(--font-width-min)) / 16) * 1rem) +
        (var(--fluid-preferred) * var(--variable-unit, 100vi)),
      (var(--fluid-max) / 16) * 1rem
    );
    font-size: var(--fluid-type);
  }

  *,
  *:after,
  *:before {
    box-sizing: border-box;
  }

  body {
    display: grid;
    place-items: center;
    min-height: 100vh;
    font-family: 'SF Pro Text', 'SF Pro Icons', 'AOS Icons', 'Helvetica Neue',
      Helvetica, Arial, sans-serif, system-ui;
  }

  .bear-link {
    color: canvasText;
    position: fixed;
    top: 1rem;
    left: 1rem;
    width: 48px;
    aspect-ratio: 1;
    display: grid;
    place-items: center;
    opacity: 0.8;
  }

  :where(.x-link, .bear-link):is(:hover, :focus-visible) {
    opacity: 1;
  }

  .bear-link svg {
    width: 75%;
  }

  /* Utilities */
  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border-width: 0;
  }
}
